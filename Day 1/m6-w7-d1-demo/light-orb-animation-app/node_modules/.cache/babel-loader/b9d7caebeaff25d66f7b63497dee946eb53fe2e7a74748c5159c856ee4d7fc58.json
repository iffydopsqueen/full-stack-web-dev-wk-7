{"ast":null,"code":"import { useContext, useMemo } from 'react';\nimport ReactVertexContext from '../Context';\nexport * from './shaders';\nexport * from './buffers';\nexport * from './framebuffers';\nexport * from './lights';\nexport * from './attributes';\nexport * from './uniforms';\nexport * from './textures';\nexport var ctxErr = 'hook must be used in a React Vertex component tree.';\nexport function useRender() {\n  var context = useContext(ReactVertexContext);\n  if (!context) {\n    throw Error(\"useRender \".concat(ctxErr));\n  }\n  if (!context.scene) {\n    throw Error('The scene is not on the context.');\n  }\n  return context.scene.render;\n}\nexport function useWebGLContext() {\n  var context = useContext(ReactVertexContext);\n  if (!context) {\n    throw new Error(\"useWebGLContext \".concat(ctxErr));\n  }\n  if (!context.scene) {\n    throw Error('The scene is not on the context.');\n  }\n  return context.scene.context;\n}\nexport function useWebGLVersion() {\n  var context = useContext(ReactVertexContext);\n  if (!context) {\n    throw new Error(\"useWebGLVersion \".concat(ctxErr));\n  }\n  if (!context.scene) {\n    throw Error('The scene is not on the context.');\n  }\n  return context.scene.webglVersion;\n}\nexport function useSceneNode() {\n  var context = useContext(ReactVertexContext);\n  if (!context.scene) {\n    throw Error('The scene is not on the context.');\n  }\n  return context.scene;\n}\nexport function useCanvas() {\n  var context = useContext(ReactVertexContext);\n  if (!context) {\n    throw new Error(\"useCanvas \".concat(ctxErr));\n  }\n  if (!context.scene) {\n    throw Error('The scene is not on the context.');\n  }\n  return context.scene.element;\n}\nexport function useCanvasSize() {\n  var context = useContext(ReactVertexContext);\n  if (!context) {\n    throw new Error(\"useCanvasSize \".concat(ctxErr));\n  }\n  if (!context.scene) {\n    throw Error('The scene is not on the context.');\n  }\n  var memoized = useMemo(function () {\n    var _context$scene, _context$scene2;\n    return {\n      width: context.width,\n      clientWidth: ((_context$scene = context.scene) === null || _context$scene === void 0 ? void 0 : _context$scene.element.clientWidth) || context.width,\n      height: context.height,\n      clientHeight: ((_context$scene2 = context.scene) === null || _context$scene2 === void 0 ? void 0 : _context$scene2.element.clientHeight) || context.height\n    };\n  }, [context.width, context.height, context.scene.element]);\n  return memoized;\n}","map":{"version":3,"names":["useContext","useMemo","ReactVertexContext","ctxErr","useRender","context","Error","concat","scene","render","useWebGLContext","useWebGLVersion","webglVersion","useSceneNode","useCanvas","element","useCanvasSize","memoized","_context$scene","_context$scene2","width","clientWidth","height","clientHeight"],"sources":["/Users/ifeoma/Documents/Documents - Ifeomaâ€™s MacBook Air/Master's/Westcliff/SPRG24/WEB 603 - Full Stack Web Development/full-stack-web-dev-wk-7/Day 1/m6-w7-d1-demo/light-orb-animation-app/node_modules/@react-vertex/core/src/hooks/index.ts"],"sourcesContent":["import { useContext, useMemo } from 'react'\nimport ReactVertexContext from '../Context'\n\nexport * from './shaders'\nexport * from './buffers'\nexport * from './framebuffers'\nexport * from './lights'\nexport * from './attributes'\nexport * from './uniforms'\nexport * from './textures'\n\nexport const ctxErr = 'hook must be used in a React Vertex component tree.'\n\nexport function useRender() {\n  const context = useContext(ReactVertexContext)\n\n  if (!context) {\n    throw Error(`useRender ${ctxErr}`)\n  }\n\n  if (!context.scene) {\n    throw Error('The scene is not on the context.')\n  }\n\n  return context.scene.render\n}\n\nexport function useWebGLContext() {\n  const context = useContext(ReactVertexContext)\n\n  if (!context) {\n    throw new Error(`useWebGLContext ${ctxErr}`)\n  }\n\n  if (!context.scene) {\n    throw Error('The scene is not on the context.')\n  }\n\n  return context.scene.context\n}\n\nexport function useWebGLVersion() {\n  const context = useContext(ReactVertexContext)\n\n  if (!context) {\n    throw new Error(`useWebGLVersion ${ctxErr}`)\n  }\n\n  if (!context.scene) {\n    throw Error('The scene is not on the context.')\n  }\n\n  return context.scene.webglVersion\n}\n\nexport function useSceneNode() {\n  const context = useContext(ReactVertexContext)\n\n  if (!context.scene) {\n    throw Error('The scene is not on the context.')\n  }\n\n  return context.scene\n}\n\nexport function useCanvas() {\n  const context = useContext(ReactVertexContext)\n\n  if (!context) {\n    throw new Error(`useCanvas ${ctxErr}`)\n  }\n\n  if (!context.scene) {\n    throw Error('The scene is not on the context.')\n  }\n\n  return context.scene.element\n}\n\nexport function useCanvasSize() {\n  const context = useContext(ReactVertexContext)\n\n  if (!context) {\n    throw new Error(`useCanvasSize ${ctxErr}`)\n  }\n\n  if (!context.scene) {\n    throw Error('The scene is not on the context.')\n  }\n\n  const memoized = useMemo(() => {\n    return {\n      width: context.width,\n      clientWidth: context.scene?.element.clientWidth || context.width,\n      height: context.height,\n      clientHeight: context.scene?.element.clientHeight || context.height,\n    }\n  }, [context.width, context.height, context.scene.element])\n\n  return memoized\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}