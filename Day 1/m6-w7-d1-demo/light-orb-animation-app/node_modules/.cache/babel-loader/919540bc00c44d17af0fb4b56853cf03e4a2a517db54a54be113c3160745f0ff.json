{"ast":null,"code":"import { useMemo } from 'react';\nimport { useStaticBuffer, useAttribute, useWebGLContext } from '@react-vertex/core';\nimport boxGeometry from './boxGeometry';\nimport circleGeometry from './circleGeometry';\nimport cylinderGeometry from './cylinderGeometry';\nimport planeGeometry from './planeGeometry';\nimport torusGeometry from './torusGeometry';\nimport sphereGeometry from './sphereGeometry';\nexport { boxGeometry, circleGeometry, cylinderGeometry, planeGeometry, torusGeometry, sphereGeometry };\nexport function useGeometryElements(geometry) {\n  var gl = useWebGLContext();\n  var positionBuffer = useStaticBuffer(gl, geometry.vertices, false, 'F32');\n  var position = useAttribute(gl, 3, positionBuffer);\n  var normalBuffer = useStaticBuffer(gl, geometry.normals, false, 'F32');\n  var normal = useAttribute(gl, 3, normalBuffer);\n  var uvBuffer = useStaticBuffer(gl, geometry.uvs, false, 'F32');\n  var uv = useAttribute(gl, 2, uvBuffer);\n  var indexBuffer = useStaticBuffer(gl, geometry.indices, true, 'U16');\n  var elements = useMemo(function () {\n    return {\n      index: indexBuffer,\n      count: geometry.indices.length,\n      attributes: {\n        position: position,\n        normal: normal,\n        uv: uv\n      },\n      drawElements: {\n        mode: 'TRIANGLES',\n        count: geometry.indices.length\n      }\n    };\n  }, [indexBuffer, geometry.indices.length, position, normal, uv]);\n  return elements;\n}\nexport function useBoxGeometry(width, height, depth, wCount, hCount, dCount) {\n  var memoized = useMemo(function () {\n    return boxGeometry(width, height, depth, wCount, hCount, dCount);\n  }, [width, height, depth, wCount, hCount, dCount]);\n  return memoized;\n}\nexport function useBoxElements(width, height, depth, wCount, hCount, dCount) {\n  var geom = useBoxGeometry(width, height, depth, wCount, hCount, dCount);\n  var elements = useGeometryElements(geom);\n  return elements;\n}\nexport function useCircleGeometry(radius, segments, thetaStart, thetaLength) {\n  var memoized = useMemo(function () {\n    return circleGeometry(radius, segments, thetaStart, thetaLength);\n  }, [radius, segments, thetaStart, thetaLength]);\n  return memoized;\n}\nexport function useCircleElements(radius, segments, thetaStart, thetaLength) {\n  var geom = useCircleGeometry(radius, segments, thetaStart, thetaLength);\n  var elements = useGeometryElements(geom);\n  return elements;\n}\nexport function useCylinderGeometry(radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n  var memoized = useMemo(function () {\n    return cylinderGeometry(radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\n  }, [radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength]);\n  return memoized;\n}\nexport function useCylinderElements(radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n  var geom = useCylinderGeometry(radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\n  var elements = useGeometryElements(geom);\n  return elements;\n}\nexport function usePlaneGeometry(width, height, widthSegments, heightSegments) {\n  var memoized = useMemo(function () {\n    return planeGeometry(width, height, widthSegments, heightSegments);\n  }, [width, height, widthSegments, heightSegments]);\n  return memoized;\n}\nexport function usePlaneElements(width, height, widthSegments, heightSegments) {\n  var geom = usePlaneGeometry(width, height, widthSegments, heightSegments);\n  var elements = useGeometryElements(geom);\n  return elements;\n}\nexport function useTorusGeometry(radius, tube, radialSegments, tubularSegments, arc) {\n  var memoized = useMemo(function () {\n    return torusGeometry(radius, tube, radialSegments, tubularSegments, arc);\n  }, [radius, tube, radialSegments, tubularSegments, arc]);\n  return memoized;\n}\nexport function useTorusElements(radius, tube, radialSegments, tubularSegments, arc) {\n  var geom = useTorusGeometry(radius, tube, radialSegments, tubularSegments, arc);\n  var elements = useGeometryElements(geom);\n  return elements;\n}\nexport function useSphereGeometry(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength) {\n  var memoized = useMemo(function () {\n    return sphereGeometry(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength);\n  }, [radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength]);\n  return memoized;\n}\nexport function useSphereElements(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength) {\n  var geom = useSphereGeometry(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength);\n  var elements = useGeometryElements(geom);\n  return elements;\n}","map":{"version":3,"names":["useMemo","useStaticBuffer","useAttribute","useWebGLContext","boxGeometry","circleGeometry","cylinderGeometry","planeGeometry","torusGeometry","sphereGeometry","useGeometryElements","geometry","gl","positionBuffer","vertices","position","normalBuffer","normals","normal","uvBuffer","uvs","uv","indexBuffer","indices","elements","index","count","length","attributes","drawElements","mode","useBoxGeometry","width","height","depth","wCount","hCount","dCount","memoized","useBoxElements","geom","useCircleGeometry","radius","segments","thetaStart","thetaLength","useCircleElements","useCylinderGeometry","radiusTop","radiusBottom","radialSegments","heightSegments","openEnded","useCylinderElements","usePlaneGeometry","widthSegments","usePlaneElements","useTorusGeometry","tube","tubularSegments","arc","useTorusElements","useSphereGeometry","phiStart","phiLength","useSphereElements"],"sources":["/Users/ifeoma/Documents/Documents - Ifeomaâ€™s MacBook Air/Master's/Westcliff/SPRG24/WEB 603 - Full Stack Web Development/full-stack-web-dev-wk-7/Day 1/m6-w7-d1-demo/light-orb-animation-app/node_modules/@react-vertex/geometry-hooks/src/index.ts"],"sourcesContent":["import { useMemo } from 'react'\nimport {\n  useStaticBuffer,\n  useAttribute,\n  useWebGLContext,\n} from '@react-vertex/core'\nimport boxGeometry from './boxGeometry'\nimport circleGeometry from './circleGeometry'\nimport cylinderGeometry from './cylinderGeometry'\nimport planeGeometry from './planeGeometry'\nimport torusGeometry from './torusGeometry'\nimport sphereGeometry from './sphereGeometry'\n\nexport {\n  boxGeometry,\n  circleGeometry,\n  cylinderGeometry,\n  planeGeometry,\n  torusGeometry,\n  sphereGeometry,\n}\n\nexport function useGeometryElements(geometry: {\n  vertices: number[]\n  normals: number[]\n  uvs: number[]\n  indices: number[]\n}) {\n  const gl = useWebGLContext()\n\n  const positionBuffer = useStaticBuffer(gl, geometry.vertices, false, 'F32')\n  const position = useAttribute(gl, 3, positionBuffer)\n\n  const normalBuffer = useStaticBuffer(gl, geometry.normals, false, 'F32')\n  const normal = useAttribute(gl, 3, normalBuffer)\n\n  const uvBuffer = useStaticBuffer(gl, geometry.uvs, false, 'F32')\n  const uv = useAttribute(gl, 2, uvBuffer)\n\n  const indexBuffer = useStaticBuffer(gl, geometry.indices, true, 'U16')\n\n  const elements = useMemo(\n    () => ({\n      index: indexBuffer,\n      count: geometry.indices.length,\n      attributes: { position, normal, uv },\n      drawElements: { mode: 'TRIANGLES', count: geometry.indices.length },\n    }),\n    [indexBuffer, geometry.indices.length, position, normal, uv],\n  )\n\n  return elements\n}\n\nexport function useBoxGeometry(\n  width?: number,\n  height?: number,\n  depth?: number,\n  wCount?: number,\n  hCount?: number,\n  dCount?: number,\n) {\n  const memoized = useMemo(() => {\n    return boxGeometry(width, height, depth, wCount, hCount, dCount)\n  }, [width, height, depth, wCount, hCount, dCount])\n\n  return memoized\n}\n\nexport function useBoxElements(\n  width?: number,\n  height?: number,\n  depth?: number,\n  wCount?: number,\n  hCount?: number,\n  dCount?: number,\n) {\n  const geom = useBoxGeometry(width, height, depth, wCount, hCount, dCount)\n  const elements = useGeometryElements(geom)\n\n  return elements\n}\n\nexport function useCircleGeometry(\n  radius?: number,\n  segments?: number,\n  thetaStart?: number,\n  thetaLength?: number,\n) {\n  const memoized = useMemo(() => {\n    return circleGeometry(radius, segments, thetaStart, thetaLength)\n  }, [radius, segments, thetaStart, thetaLength])\n\n  return memoized\n}\n\nexport function useCircleElements(\n  radius?: number,\n  segments?: number,\n  thetaStart?: number,\n  thetaLength?: number,\n) {\n  const geom = useCircleGeometry(radius, segments, thetaStart, thetaLength)\n  const elements = useGeometryElements(geom)\n\n  return elements\n}\n\nexport function useCylinderGeometry(\n  radiusTop?: number,\n  radiusBottom?: number,\n  height?: number,\n  radialSegments?: number,\n  heightSegments?: number,\n  openEnded?: boolean,\n  thetaStart?: number,\n  thetaLength?: number,\n) {\n  const memoized = useMemo(() => {\n    return cylinderGeometry(\n      radiusTop,\n      radiusBottom,\n      height,\n      radialSegments,\n      heightSegments,\n      openEnded,\n      thetaStart,\n      thetaLength,\n    )\n  }, [\n    radiusTop,\n    radiusBottom,\n    height,\n    radialSegments,\n    heightSegments,\n    openEnded,\n    thetaStart,\n    thetaLength,\n  ])\n\n  return memoized\n}\n\nexport function useCylinderElements(\n  radiusTop?: number,\n  radiusBottom?: number,\n  height?: number,\n  radialSegments?: number,\n  heightSegments?: number,\n  openEnded?: boolean,\n  thetaStart?: number,\n  thetaLength?: number,\n) {\n  const geom = useCylinderGeometry(\n    radiusTop,\n    radiusBottom,\n    height,\n    radialSegments,\n    heightSegments,\n    openEnded,\n    thetaStart,\n    thetaLength,\n  )\n  const elements = useGeometryElements(geom)\n\n  return elements\n}\n\nexport function usePlaneGeometry(\n  width?: number,\n  height?: number,\n  widthSegments?: number,\n  heightSegments?: number,\n) {\n  const memoized = useMemo(() => {\n    return planeGeometry(width, height, widthSegments, heightSegments)\n  }, [width, height, widthSegments, heightSegments])\n\n  return memoized\n}\n\nexport function usePlaneElements(\n  width?: number,\n  height?: number,\n  widthSegments?: number,\n  heightSegments?: number,\n) {\n  const geom = usePlaneGeometry(width, height, widthSegments, heightSegments)\n  const elements = useGeometryElements(geom)\n\n  return elements\n}\n\nexport function useTorusGeometry(\n  radius?: number,\n  tube?: number,\n  radialSegments?: number,\n  tubularSegments?: number,\n  arc?: number,\n) {\n  const memoized = useMemo(() => {\n    return torusGeometry(radius, tube, radialSegments, tubularSegments, arc)\n  }, [radius, tube, radialSegments, tubularSegments, arc])\n\n  return memoized\n}\n\nexport function useTorusElements(\n  radius?: number,\n  tube?: number,\n  radialSegments?: number,\n  tubularSegments?: number,\n  arc?: number,\n) {\n  const geom = useTorusGeometry(\n    radius,\n    tube,\n    radialSegments,\n    tubularSegments,\n    arc,\n  )\n  const elements = useGeometryElements(geom)\n\n  return elements\n}\n\nexport function useSphereGeometry(\n  radius?: number,\n  widthSegments?: number,\n  heightSegments?: number,\n  phiStart?: number,\n  phiLength?: number,\n  thetaStart?: number,\n  thetaLength?: number,\n) {\n  const memoized = useMemo(() => {\n    return sphereGeometry(\n      radius,\n      widthSegments,\n      heightSegments,\n      phiStart,\n      phiLength,\n      thetaStart,\n      thetaLength,\n    )\n  }, [\n    radius,\n    widthSegments,\n    heightSegments,\n    phiStart,\n    phiLength,\n    thetaStart,\n    thetaLength,\n  ])\n\n  return memoized\n}\n\nexport function useSphereElements(\n  radius?: number,\n  widthSegments?: number,\n  heightSegments?: number,\n  phiStart?: number,\n  phiLength?: number,\n  thetaStart?: number,\n  thetaLength?: number,\n) {\n  const geom = useSphereGeometry(\n    radius,\n    widthSegments,\n    heightSegments,\n    phiStart,\n    phiLength,\n    thetaStart,\n    thetaLength,\n  )\n  const elements = useGeometryElements(geom)\n\n  return elements\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}