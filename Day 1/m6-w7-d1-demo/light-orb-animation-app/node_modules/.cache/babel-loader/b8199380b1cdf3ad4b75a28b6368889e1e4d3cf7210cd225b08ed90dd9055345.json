{"ast":null,"code":"var _jsxFileName = \"/Users/ifeoma/Documents/Documents - Ifeoma\\u2019s MacBook Air/Master's/Westcliff/SPRG24/WEB 603 - Full Stack Web Development/full-stack-web-dev-wk-7/Day 1/m6-w7-d1-demo/light-orb-animation-app/src/Spheres.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useTexture2d } from \"@react-vertex/core\";\nimport { usePhongTextured } from \"@react-vertex/material-hooks\";\nimport { useSphereElements } from \"@react-vertex/geometry-hooks\";\nimport tiles from \"./abstract.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Spheres({\n  layoutRadius,\n  sphereCount,\n  sphereRadius\n}) {\n  _s();\n  const [texture] = useTexture2d(tiles);\n  const program = usePhongTextured(texture, 0.1);\n  const sphere = useSphereElements(sphereRadius, 20, 20);\n  const positions = useMemo(() => {\n    const result = [];\n    for (let i = 0; i < sphereCount; i++) {\n      const a = Math.acos(-1 + 2 * i / sphereCount);\n      const b = Math.sqrt((sphereCount - 1) * Math.PI) * a;\n      result.push([layoutRadius * Math.cos(b) * Math.sin(a), layoutRadius * Math.sin(b) * Math.sin(a), layoutRadius * Math.cos(a)]);\n    }\n    return result;\n  }, [sphereCount, layoutRadius]);\n  return /*#__PURE__*/_jsxDEV(\"material\", {\n    program: program,\n    children: positions.map((position, idx) => /*#__PURE__*/_jsxDEV(\"geometry\", {\n      position: position,\n      ...sphere\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Spheres, \"CGrqdehuVdkbC0h1snCkM2W6/CQ=\", false, function () {\n  return [useTexture2d, usePhongTextured, useSphereElements];\n});\n_c = Spheres;\nSpheres.propTypes = {\n  sphereCount: PropTypes.number.isRequired,\n  sphereRadius: PropTypes.number.isRequired,\n  layoutRadius: PropTypes.number.isRequired\n};\nexport default Spheres;\nvar _c;\n$RefreshReg$(_c, \"Spheres\");","map":{"version":3,"names":["React","useMemo","PropTypes","useTexture2d","usePhongTextured","useSphereElements","tiles","jsxDEV","_jsxDEV","Spheres","layoutRadius","sphereCount","sphereRadius","_s","texture","program","sphere","positions","result","i","a","Math","acos","b","sqrt","PI","push","cos","sin","children","map","position","idx","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","number","isRequired","$RefreshReg$"],"sources":["/Users/ifeoma/Documents/Documents - Ifeomaâ€™s MacBook Air/Master's/Westcliff/SPRG24/WEB 603 - Full Stack Web Development/full-stack-web-dev-wk-7/Day 1/m6-w7-d1-demo/light-orb-animation-app/src/Spheres.js"],"sourcesContent":["import React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useTexture2d } from \"@react-vertex/core\";\nimport { usePhongTextured } from \"@react-vertex/material-hooks\";\nimport { useSphereElements } from \"@react-vertex/geometry-hooks\";\nimport tiles from \"./abstract.jpg\";\n\nfunction Spheres({ layoutRadius, sphereCount, sphereRadius }) {\n  const [texture] = useTexture2d(tiles);\n  const program = usePhongTextured(texture, 0.1);\n  const sphere = useSphereElements(sphereRadius, 20, 20);\n\n  const positions = useMemo(() => {\n    const result = [];\n\n    for (let i = 0; i < sphereCount; i++) {\n      const a = Math.acos(-1 + (2 * i) / sphereCount);\n      const b = Math.sqrt((sphereCount - 1) * Math.PI) * a;\n\n      result.push([\n        layoutRadius * Math.cos(b) * Math.sin(a),\n        layoutRadius * Math.sin(b) * Math.sin(a),\n        layoutRadius * Math.cos(a)\n      ]);\n    }\n\n    return result;\n  }, [sphereCount, layoutRadius]);\n\n  return (\n    <material program={program}>\n      {positions.map((position, idx) => (\n        <geometry key={idx} position={position} {...sphere} />\n      ))}\n    </material>\n  );\n}\n\nSpheres.propTypes = {\n  sphereCount: PropTypes.number.isRequired,\n  sphereRadius: PropTypes.number.isRequired,\n  layoutRadius: PropTypes.number.isRequired\n};\n\nexport default Spheres;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,gBAAgB,QAAQ,8BAA8B;AAC/D,SAASC,iBAAiB,QAAQ,8BAA8B;AAChE,OAAOC,KAAK,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,OAAOA,CAAC;EAAEC,YAAY;EAAEC,WAAW;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EAC5D,MAAM,CAACC,OAAO,CAAC,GAAGX,YAAY,CAACG,KAAK,CAAC;EACrC,MAAMS,OAAO,GAAGX,gBAAgB,CAACU,OAAO,EAAE,GAAG,CAAC;EAC9C,MAAME,MAAM,GAAGX,iBAAiB,CAACO,YAAY,EAAE,EAAE,EAAE,EAAE,CAAC;EAEtD,MAAMK,SAAS,GAAGhB,OAAO,CAAC,MAAM;IAC9B,MAAMiB,MAAM,GAAG,EAAE;IAEjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,WAAW,EAAEQ,CAAC,EAAE,EAAE;MACpC,MAAMC,CAAC,GAAGC,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,GAAI,CAAC,GAAGH,CAAC,GAAIR,WAAW,CAAC;MAC/C,MAAMY,CAAC,GAAGF,IAAI,CAACG,IAAI,CAAC,CAACb,WAAW,GAAG,CAAC,IAAIU,IAAI,CAACI,EAAE,CAAC,GAAGL,CAAC;MAEpDF,MAAM,CAACQ,IAAI,CAAC,CACVhB,YAAY,GAAGW,IAAI,CAACM,GAAG,CAACJ,CAAC,CAAC,GAAGF,IAAI,CAACO,GAAG,CAACR,CAAC,CAAC,EACxCV,YAAY,GAAGW,IAAI,CAACO,GAAG,CAACL,CAAC,CAAC,GAAGF,IAAI,CAACO,GAAG,CAACR,CAAC,CAAC,EACxCV,YAAY,GAAGW,IAAI,CAACM,GAAG,CAACP,CAAC,CAAC,CAC3B,CAAC;IACJ;IAEA,OAAOF,MAAM;EACf,CAAC,EAAE,CAACP,WAAW,EAAED,YAAY,CAAC,CAAC;EAE/B,oBACEF,OAAA;IAAUO,OAAO,EAAEA,OAAQ;IAAAc,QAAA,EACxBZ,SAAS,CAACa,GAAG,CAAC,CAACC,QAAQ,EAAEC,GAAG,kBAC3BxB,OAAA;MAAoBuB,QAAQ,EAAEA,QAAS;MAAA,GAAKf;IAAM,GAAnCgB,GAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAmC,CACtD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEf;AAACvB,EAAA,CA7BQJ,OAAO;EAAA,QACIN,YAAY,EACdC,gBAAgB,EACjBC,iBAAiB;AAAA;AAAAgC,EAAA,GAHzB5B,OAAO;AA+BhBA,OAAO,CAAC6B,SAAS,GAAG;EAClB3B,WAAW,EAAET,SAAS,CAACqC,MAAM,CAACC,UAAU;EACxC5B,YAAY,EAAEV,SAAS,CAACqC,MAAM,CAACC,UAAU;EACzC9B,YAAY,EAAER,SAAS,CAACqC,MAAM,CAACC;AACjC,CAAC;AAED,eAAe/B,OAAO;AAAC,IAAA4B,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}