{"ast":null,"code":"import { useMemo } from 'react';\nimport { useWebGLVersion } from '../hooks';\nexport function useAttribute(gl, size, buffer, getOptions) {\n  var memoized = useMemo(function () {\n    return function (location) {\n      if (location >= 0) {\n        var options = getOptions ? getOptions(gl) : {};\n        var target = options.target || gl.ARRAY_BUFFER;\n        gl.enableVertexAttribArray(location);\n        gl.bindBuffer(target, buffer);\n        var type = options.type || gl.FLOAT;\n        var normalized = options.normalized || false;\n        var stride = options.stride || 0;\n        var offset = options.offset || 0;\n        gl.vertexAttribPointer(location, size, type, normalized, stride, offset);\n      }\n    };\n  }, [gl, size, buffer, getOptions]);\n  return memoized;\n}\nexport function useInstancedAttribute(gl, size, buffer, getOptions) {\n  var version = useWebGLVersion();\n  var memoized = useMemo(function () {\n    return function (location, ext) {\n      if (location >= 0) {\n        var options = getOptions ? getOptions(gl) : {};\n        var target = options.target || gl.ARRAY_BUFFER;\n        gl.enableVertexAttribArray(location);\n        gl.bindBuffer(target, buffer);\n        var type = options.type || gl.FLOAT;\n        var normalized = options.normalized || false;\n        var stride = options.stride || 0;\n        var offset = options.offset || 0;\n        gl.vertexAttribPointer(location, size, type, normalized, stride, offset);\n        if (version === 2) {\n          // @ts-ignore\n          gl.vertexAttribDivisor(location, 1);\n        } else if (ext) {\n          ext.vertexAttribDivisorANGLE(location, 1);\n        } else {\n          console.log('Instanced attributes require WebGL 2 or ANGLE extension');\n        }\n      }\n    };\n  }, [gl, size, buffer, version, getOptions]);\n  return memoized;\n}","map":{"version":3,"names":["useMemo","useWebGLVersion","useAttribute","gl","size","buffer","getOptions","memoized","location","options","target","ARRAY_BUFFER","enableVertexAttribArray","bindBuffer","type","FLOAT","normalized","stride","offset","vertexAttribPointer","useInstancedAttribute","version","ext","vertexAttribDivisor","vertexAttribDivisorANGLE","console","log"],"sources":["/Users/ifeoma/Documents/Documents - Ifeomaâ€™s MacBook Air/Master's/Westcliff/SPRG24/WEB 603 - Full Stack Web Development/full-stack-web-dev-wk-7/Day 1/m6-w7-d1-demo/light-orb-animation-app/node_modules/@react-vertex/core/src/hooks/attributes.ts"],"sourcesContent":["import { useMemo } from 'react'\n\nimport { useWebGLVersion } from '../hooks'\nimport { GLContext, GetAttributeOptions } from '../types'\n\nexport function useAttribute(\n  gl: GLContext,\n  size: number,\n  buffer: WebGLBuffer | null,\n  getOptions?: GetAttributeOptions,\n) {\n  const memoized = useMemo(() => {\n    return function(location: number) {\n      if (location >= 0) {\n        const options = getOptions ? getOptions(gl) : {}\n        const target = options.target || gl.ARRAY_BUFFER\n\n        gl.enableVertexAttribArray(location)\n        gl.bindBuffer(target, buffer)\n\n        const type = options.type || gl.FLOAT\n        const normalized = options.normalized || false\n        const stride = options.stride || 0\n        const offset = options.offset || 0\n\n        gl.vertexAttribPointer(location, size, type, normalized, stride, offset)\n      }\n    }\n  }, [gl, size, buffer, getOptions])\n\n  return memoized\n}\n\nexport function useInstancedAttribute(\n  gl: GLContext,\n  size: number,\n  buffer: WebGLBuffer | null,\n  getOptions?: GetAttributeOptions,\n) {\n  const version = useWebGLVersion()\n\n  const memoized = useMemo(() => {\n    return function(location: number, ext?: ANGLE_instanced_arrays) {\n      if (location >= 0) {\n        const options = getOptions ? getOptions(gl) : {}\n        const target = options.target || gl.ARRAY_BUFFER\n\n        gl.enableVertexAttribArray(location)\n        gl.bindBuffer(target, buffer)\n\n        const type = options.type || gl.FLOAT\n        const normalized = options.normalized || false\n        const stride = options.stride || 0\n        const offset = options.offset || 0\n\n        gl.vertexAttribPointer(location, size, type, normalized, stride, offset)\n\n        if (version === 2) {\n          // @ts-ignore\n          gl.vertexAttribDivisor(location, 1)\n        } else if (ext) {\n          ext.vertexAttribDivisorANGLE(location, 1)\n        } else {\n          console.log('Instanced attributes require WebGL 2 or ANGLE extension')\n        }\n      }\n    }\n  }, [gl, size, buffer, version, getOptions])\n\n  return memoized\n}\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AAEA,SAASC,eAAT,QAAgC,UAAhC;AAGA,OAAO,SAASC,YAATA,CACLC,EADK,EAELC,IAFK,EAGLC,MAHK,EAILC,UAJK,EAKL;EACA,IAAMC,QAAQ,GAAGP,OAAO,CAAC,YAAM;IAC7B,OAAO,UAASQ,QAAT,EAA2B;MAChC,IAAIA,QAAQ,IAAI,CAAhB,EAAmB;QACjB,IAAMC,OAAO,GAAGH,UAAU,GAAGA,UAAU,CAACH,EAAD,CAAb,GAAoB,EAA9C;QACA,IAAMO,MAAM,GAAGD,OAAO,CAACC,MAAR,IAAkBP,EAAE,CAACQ,YAApC;QAEAR,EAAE,CAACS,uBAAH,CAA2BJ,QAA3B;QACAL,EAAE,CAACU,UAAH,CAAcH,MAAd,EAAsBL,MAAtB;QAEA,IAAMS,IAAI,GAAGL,OAAO,CAACK,IAAR,IAAgBX,EAAE,CAACY,KAAhC;QACA,IAAMC,UAAU,GAAGP,OAAO,CAACO,UAAR,IAAsB,KAAzC;QACA,IAAMC,MAAM,GAAGR,OAAO,CAACQ,MAAR,IAAkB,CAAjC;QACA,IAAMC,MAAM,GAAGT,OAAO,CAACS,MAAR,IAAkB,CAAjC;QAEAf,EAAE,CAACgB,mBAAH,CAAuBX,QAAvB,EAAiCJ,IAAjC,EAAuCU,IAAvC,EAA6CE,UAA7C,EAAyDC,MAAzD,EAAiEC,MAAjE;MACD;IACF,CAfD;EAgBD,CAjBuB,EAiBrB,CAACf,EAAD,EAAKC,IAAL,EAAWC,MAAX,EAAmBC,UAAnB,CAjBqB,CAAxB;EAmBA,OAAOC,QAAP;AACD;AAED,OAAO,SAASa,qBAATA,CACLjB,EADK,EAELC,IAFK,EAGLC,MAHK,EAILC,UAJK,EAKL;EACA,IAAMe,OAAO,GAAGpB,eAAe,EAA/B;EAEA,IAAMM,QAAQ,GAAGP,OAAO,CAAC,YAAM;IAC7B,OAAO,UAASQ,QAAT,EAA2Bc,GAA3B,EAAyD;MAC9D,IAAId,QAAQ,IAAI,CAAhB,EAAmB;QACjB,IAAMC,OAAO,GAAGH,UAAU,GAAGA,UAAU,CAACH,EAAD,CAAb,GAAoB,EAA9C;QACA,IAAMO,MAAM,GAAGD,OAAO,CAACC,MAAR,IAAkBP,EAAE,CAACQ,YAApC;QAEAR,EAAE,CAACS,uBAAH,CAA2BJ,QAA3B;QACAL,EAAE,CAACU,UAAH,CAAcH,MAAd,EAAsBL,MAAtB;QAEA,IAAMS,IAAI,GAAGL,OAAO,CAACK,IAAR,IAAgBX,EAAE,CAACY,KAAhC;QACA,IAAMC,UAAU,GAAGP,OAAO,CAACO,UAAR,IAAsB,KAAzC;QACA,IAAMC,MAAM,GAAGR,OAAO,CAACQ,MAAR,IAAkB,CAAjC;QACA,IAAMC,MAAM,GAAGT,OAAO,CAACS,MAAR,IAAkB,CAAjC;QAEAf,EAAE,CAACgB,mBAAH,CAAuBX,QAAvB,EAAiCJ,IAAjC,EAAuCU,IAAvC,EAA6CE,UAA7C,EAAyDC,MAAzD,EAAiEC,MAAjE;QAEA,IAAIG,OAAO,KAAK,CAAhB,EAAmB;UACjB;UACAlB,EAAE,CAACoB,mBAAH,CAAuBf,QAAvB,EAAiC,CAAjC;QACD,CAHD,MAGO,IAAIc,GAAJ,EAAS;UACdA,GAAG,CAACE,wBAAJ,CAA6BhB,QAA7B,EAAuC,CAAvC;QACD,CAFM,MAEA;UACLiB,OAAO,CAACC,GAAR,CAAY,yDAAZ;QACD;MACF;IACF,CAxBD;EAyBD,CA1BuB,EA0BrB,CAACvB,EAAD,EAAKC,IAAL,EAAWC,MAAX,EAAmBgB,OAAnB,EAA4Bf,UAA5B,CA1BqB,CAAxB;EA4BA,OAAOC,QAAP;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}