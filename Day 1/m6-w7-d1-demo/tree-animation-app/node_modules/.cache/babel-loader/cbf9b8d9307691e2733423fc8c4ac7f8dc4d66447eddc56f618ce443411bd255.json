{"ast":null,"code":"var _jsxFileName = \"/Users/ifeoma/Documents/Documents - Ifeoma\\u2019s MacBook Air/Master's/Westcliff/SPRG24/WEB 603 - Full Stack Web Development/full-stack-web-dev-wk-7/Day 1/m6-w7-d1-demo/tree-animation-app/src/Link.js\";\nimport React, { Fragment } from \"react\";\nimport { LinkHorizontal, LinkVertical, LinkRadial, LinkHorizontalStep, LinkVerticalStep, LinkRadialStep, LinkHorizontalCurve, LinkVerticalCurve, LinkRadialCurve, LinkHorizontalLine, LinkVerticalLine, LinkRadialLine } from \"@vx/shape\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Link({\n  data,\n  linkType,\n  layout,\n  orientation,\n  stepPercent,\n  ...props\n}) {\n  let LinkComponent;\n  if (layout === \"polar\") {\n    if (linkType === \"step\") {\n      LinkComponent = LinkRadialStep;\n    } else if (linkType === \"curve\") {\n      LinkComponent = LinkRadialCurve;\n    } else if (linkType === \"line\") {\n      LinkComponent = LinkRadialLine;\n    } else {\n      LinkComponent = LinkRadial;\n    }\n  } else {\n    if (orientation === \"vertical\") {\n      if (linkType === \"step\") {\n        LinkComponent = LinkVerticalStep;\n      } else if (linkType === \"curve\") {\n        LinkComponent = LinkVerticalCurve;\n      } else if (linkType === \"line\") {\n        LinkComponent = LinkVerticalLine;\n      } else {\n        LinkComponent = LinkVertical;\n      }\n    } else {\n      if (linkType === \"step\") {\n        LinkComponent = LinkHorizontalStep;\n      } else if (linkType === \"curve\") {\n        LinkComponent = LinkHorizontalCurve;\n      } else if (linkType === \"line\") {\n        LinkComponent = LinkHorizontalLine;\n      } else {\n        LinkComponent = LinkHorizontal;\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(LinkComponent, {\n    data: data,\n    percent: stepPercent,\n    stroke: \"#374469\",\n    strokeWidth: \"1\",\n    fill: \"none\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_c = Link;\nexport default Link;\nvar _c;\n$RefreshReg$(_c, \"Link\");","map":{"version":3,"names":["React","Fragment","LinkHorizontal","LinkVertical","LinkRadial","LinkHorizontalStep","LinkVerticalStep","LinkRadialStep","LinkHorizontalCurve","LinkVerticalCurve","LinkRadialCurve","LinkHorizontalLine","LinkVerticalLine","LinkRadialLine","jsxDEV","_jsxDEV","Link","data","linkType","layout","orientation","stepPercent","props","LinkComponent","percent","stroke","strokeWidth","fill","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ifeoma/Documents/Documents - Ifeomaâ€™s MacBook Air/Master's/Westcliff/SPRG24/WEB 603 - Full Stack Web Development/full-stack-web-dev-wk-7/Day 1/m6-w7-d1-demo/tree-animation-app/src/Link.js"],"sourcesContent":["import React, { Fragment } from \"react\";\nimport {\n  LinkHorizontal,\n  LinkVertical,\n  LinkRadial,\n  LinkHorizontalStep,\n  LinkVerticalStep,\n  LinkRadialStep,\n  LinkHorizontalCurve,\n  LinkVerticalCurve,\n  LinkRadialCurve,\n  LinkHorizontalLine,\n  LinkVerticalLine,\n  LinkRadialLine\n} from \"@vx/shape\";\n\nfunction Link({ data, linkType, layout, orientation, stepPercent, ...props }) {\n  let LinkComponent;\n\n  if (layout === \"polar\") {\n    if (linkType === \"step\") {\n      LinkComponent = LinkRadialStep;\n    } else if (linkType === \"curve\") {\n      LinkComponent = LinkRadialCurve;\n    } else if (linkType === \"line\") {\n      LinkComponent = LinkRadialLine;\n    } else {\n      LinkComponent = LinkRadial;\n    }\n  } else {\n    if (orientation === \"vertical\") {\n      if (linkType === \"step\") {\n        LinkComponent = LinkVerticalStep;\n      } else if (linkType === \"curve\") {\n        LinkComponent = LinkVerticalCurve;\n      } else if (linkType === \"line\") {\n        LinkComponent = LinkVerticalLine;\n      } else {\n        LinkComponent = LinkVertical;\n      }\n    } else {\n      if (linkType === \"step\") {\n        LinkComponent = LinkHorizontalStep;\n      } else if (linkType === \"curve\") {\n        LinkComponent = LinkHorizontalCurve;\n      } else if (linkType === \"line\") {\n        LinkComponent = LinkHorizontalLine;\n      } else {\n        LinkComponent = LinkHorizontal;\n      }\n    }\n  }\n\n  return (\n    <LinkComponent\n      data={data}\n      percent={stepPercent}\n      stroke=\"#374469\"\n      strokeWidth=\"1\"\n      fill=\"none\"\n      {...props}\n    />\n  );\n}\n\nexport default Link;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACEC,cAAc,EACdC,YAAY,EACZC,UAAU,EACVC,kBAAkB,EAClBC,gBAAgB,EAChBC,cAAc,EACdC,mBAAmB,EACnBC,iBAAiB,EACjBC,eAAe,EACfC,kBAAkB,EAClBC,gBAAgB,EAChBC,cAAc,QACT,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,IAAIA,CAAC;EAAEC,IAAI;EAAEC,QAAQ;EAAEC,MAAM;EAAEC,WAAW;EAAEC,WAAW;EAAE,GAAGC;AAAM,CAAC,EAAE;EAC5E,IAAIC,aAAa;EAEjB,IAAIJ,MAAM,KAAK,OAAO,EAAE;IACtB,IAAID,QAAQ,KAAK,MAAM,EAAE;MACvBK,aAAa,GAAGhB,cAAc;IAChC,CAAC,MAAM,IAAIW,QAAQ,KAAK,OAAO,EAAE;MAC/BK,aAAa,GAAGb,eAAe;IACjC,CAAC,MAAM,IAAIQ,QAAQ,KAAK,MAAM,EAAE;MAC9BK,aAAa,GAAGV,cAAc;IAChC,CAAC,MAAM;MACLU,aAAa,GAAGnB,UAAU;IAC5B;EACF,CAAC,MAAM;IACL,IAAIgB,WAAW,KAAK,UAAU,EAAE;MAC9B,IAAIF,QAAQ,KAAK,MAAM,EAAE;QACvBK,aAAa,GAAGjB,gBAAgB;MAClC,CAAC,MAAM,IAAIY,QAAQ,KAAK,OAAO,EAAE;QAC/BK,aAAa,GAAGd,iBAAiB;MACnC,CAAC,MAAM,IAAIS,QAAQ,KAAK,MAAM,EAAE;QAC9BK,aAAa,GAAGX,gBAAgB;MAClC,CAAC,MAAM;QACLW,aAAa,GAAGpB,YAAY;MAC9B;IACF,CAAC,MAAM;MACL,IAAIe,QAAQ,KAAK,MAAM,EAAE;QACvBK,aAAa,GAAGlB,kBAAkB;MACpC,CAAC,MAAM,IAAIa,QAAQ,KAAK,OAAO,EAAE;QAC/BK,aAAa,GAAGf,mBAAmB;MACrC,CAAC,MAAM,IAAIU,QAAQ,KAAK,MAAM,EAAE;QAC9BK,aAAa,GAAGZ,kBAAkB;MACpC,CAAC,MAAM;QACLY,aAAa,GAAGrB,cAAc;MAChC;IACF;EACF;EAEA,oBACEa,OAAA,CAACQ,aAAa;IACZN,IAAI,EAAEA,IAAK;IACXO,OAAO,EAAEH,WAAY;IACrBI,MAAM,EAAC,SAAS;IAChBC,WAAW,EAAC,GAAG;IACfC,IAAI,EAAC,MAAM;IAAA,GACPL;EAAK;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEN;AAACC,EAAA,GA/CQhB,IAAI;AAiDb,eAAeA,IAAI;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}